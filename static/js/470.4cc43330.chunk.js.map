{"version":3,"file":"static/js/470.4cc43330.chunk.js","mappings":"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","sources":["../node_modules/react-jwt/src/helpers/base64.ts","views/Dashboard/AdminDashboard/index.tsx","../node_modules/react-jwt/src/jwt/index.ts","../node_modules/react-jwt/src/hooks/index.tsx","views/Dashboard/UserDashboard/index.tsx","routes/privateRoutes.tsx"],"sourcesContent":["const map = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nconst reverseMap = new Map();\n\nfor (let i = 0; i < map.length; i++) {\n  let bits: string = i.toString(2);\n  const padding: number = 6 - bits.length;\n  bits = \"0\".repeat(padding) + bits;\n\n  reverseMap.set(map.charCodeAt(i), bits);\n}\n\n/**\n * Convert base64 string to an array of bytes\n * @param base64Str - Base64 string\n * @returns Array of 1-byte elements\n */\nfunction toByteArray(base64Str: string): string[] {\n  let bits: string = \"\";\n\n  // convert base64 string to bits\n  for (let i = 0; i < base64Str.length; i++) {\n    bits += reverseMap.get(base64Str.charCodeAt(i));\n  }\n\n  // Remove padding (\"=\" characters)\n  bits = bits.slice(0, bits.length - (bits.length % 8));\n\n  const bytesArray = [];\n\n  // Separate string by 8-bit groups\n  for (let i = 0; i < bits.length / 8; i++) {\n    bytesArray.push(bits.slice(i * 8, i * 8 + 8));\n  }\n\n  return bytesArray;\n}\n\n/**\n * Convert a base64 string to an UTF-8 array\n * @param base64Str - Base64 string\n * @returns UTF-8 array\n */\nexport function base64DecToArray(base64Str: string): number[] {\n  // Replace - _ and remove padding\n  base64Str = base64Str.replaceAll(\"=\", \"\");\n  base64Str = base64Str.replaceAll(\"-\", \"+\");\n  base64Str = base64Str.replaceAll(\"_\", \"/\");\n\n  const charCodes: string[] = toByteArray(base64Str);\n\n  return charCodes.map((code) => parseInt(code, 2));\n}\n\n/**\n * Convert a UTF-8 array to string\n * @param bytes\n * @returns Decoded string\n */\nexport function UTF8ArrToStr(bytes: number[]): string {\n  let decoded: string = \"\"; // Decoded string\n  let nPart: number;\n  const arrayLength: number = bytes.length;\n\n  for (let i = 0; i < arrayLength; i++) {\n    nPart = bytes[i];\n    decoded += String.fromCodePoint(\n      nPart > 251 && nPart < 254 && i + 5 < arrayLength /* six bytes */\n        ? /* (nPart - 252 << 30) may be not so safe in ECMAScript! So... */\n          (nPart - 252) * 1073741824 +\n            ((bytes[++i] - 128) << 24) +\n            ((bytes[++i] - 128) << 18) +\n            ((bytes[++i] - 128) << 12) +\n            ((bytes[++i] - 128) << 6) +\n            bytes[++i] -\n            128\n        : nPart > 247 && nPart < 252 && i + 4 < arrayLength /* five bytes */\n        ? ((nPart - 248) << 24) +\n          ((bytes[++i] - 128) << 18) +\n          ((bytes[++i] - 128) << 12) +\n          ((bytes[++i] - 128) << 6) +\n          bytes[++i] -\n          128\n        : nPart > 239 && nPart < 248 && i + 3 < arrayLength /* four bytes */\n        ? ((nPart - 240) << 18) +\n          ((bytes[++i] - 128) << 12) +\n          ((bytes[++i] - 128) << 6) +\n          bytes[++i] -\n          128\n        : nPart > 223 && nPart < 240 && i + 2 < arrayLength /* three bytes */\n        ? ((nPart - 224) << 12) + ((bytes[++i] - 128) << 6) + bytes[++i] - 128\n        : nPart > 191 && nPart < 224 && i + 1 < arrayLength /* two bytes */\n        ? ((nPart - 192) << 6) + bytes[++i] - 128 /* nPart < 127 ? */\n        : /* one byte */\n          nPart\n    );\n  }\n\n  return decoded;\n}\n","import React, { useEffect } from \"react\";\r\nimport { Theme, Box } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { MainReducerInterface } from \"../../../provider/reducer/main.reducer\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    container: {\r\n        margin: \"0 52px\",\r\n    },\r\n}));\r\nconst AdminDashboard = () => {\r\n    const user = useSelector((state: MainReducerInterface) => state);\r\n\r\n    console.log(user, \"user\");\r\n\r\n    useEffect(() => {\r\n        window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\r\n    }, []);\r\n    const classes = useStyles();\r\n    return <Box className={classes.container}>سلام خوش اومدی</Box>;\r\n};\r\n\r\nexport default AdminDashboard;\r\n","import { base64DecToArray, UTF8ArrToStr } from \"../helpers/base64\";\n\n/**\n * Try to decode a JWT. If the token is valid you'll get an object otherwise you'll get null\n * @param token - The JWT that you want to decode\n * @returns Decoded token\n */\nexport function decodeToken<T>(token: string): T | null;\nexport function decodeToken(token: string): Object | null;\nexport function decodeToken<T = Object>(token: string): T | null {\n  try {\n    // if the token has more or less than 3 parts or is not a string\n    // then is not a valid token\n    if (token.split(\".\").length !== 3 || typeof token !== \"string\") {\n      return null;\n    }\n\n    // payload ( index 1 ) has the data stored and\n    // data about the expiration time\n    const payload: string = token.split(\".\")[1];\n\n    const base64Bytes: number[] = base64DecToArray(payload);\n    // Convert utf-8 array to string\n    const jsonPayload: string = decodeURIComponent(UTF8ArrToStr(base64Bytes));\n    // Parse JSON\n    return JSON.parse(jsonPayload);\n  } catch (error) {\n    console.error(\"There was an error decoding token: \", error);\n    // Return null if something goes wrong\n    return null;\n  }\n}\n\n/**\n * Verify if the token is expired or not\n * @param token - Your JWT\n * @returns boolean\n */\nexport function isTokenExpired(token: string): boolean {\n  const decodedToken: any = decodeToken(token);\n  let result: boolean = true;\n\n  if (decodedToken && decodedToken.exp) {\n    const expirationDate: Date = new Date(0);\n    expirationDate.setUTCSeconds(decodedToken.exp); // sets the expiration seconds\n    // compare the expiration time and the current time\n    result = expirationDate.valueOf() < new Date().valueOf();\n  }\n\n  return result;\n}\n","import { useState, useEffect } from \"react\";\nimport { decodeToken, isTokenExpired } from \"../jwt\";\n\n/**\n * This function will help you to decode a JWT and know if it's expired or not\n * @param userJwt - Your JWT\n * @returns An object containing the properties isExpired, decodedToken and reEvaluateToken\n */\nexport function useJwt<T>(userJwt: string): IUseJwt<T>;\nexport function useJwt(userJwt: string): IUseJwt;\nexport function useJwt<T>(userJwt: string): IUseJwt<T> {\n  const [isExpired, setIsExpired] = useState<boolean>(false);\n  const [decodedToken, setDecodedToken] = useState<T | null>(null);\n\n  useEffect(() => {\n    evaluateToken(userJwt);\n  }, [userJwt]);\n\n  const evaluateToken = (token: string) => {\n    setDecodedToken(decodeToken<T>(token));\n    setIsExpired(isTokenExpired(token));\n  };\n\n  return { isExpired, decodedToken, reEvaluateToken: evaluateToken };\n}\n\ninterface IUseJwt<T = Object> {\n  isExpired: boolean;\n  decodedToken: T | null;\n  reEvaluateToken: (token: string) => void;\n}\n","import React, { useEffect } from \"react\";\r\nimport { Theme, Box, TextField } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { MainReducerInterface } from \"../../../provider/reducer/main.reducer\";\r\nimport { useJwt } from \"react-jwt\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    container: {\r\n        margin: \"0 52px\",\r\n    },\r\n}));\r\nconst UserDashboard = () => {\r\n    const auth = useSelector((state: MainReducerInterface) => state.auth);\r\n    const navigate = useNavigate();\r\n    const token = auth.token ?? localStorage.getItem(\"token\");\r\n    const data: any = useJwt(token ?? \"\");\r\n\r\n    console.log(data, \"user\");\r\n\r\n    useEffect(() => {\r\n        window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\r\n    }, []);\r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={classes.container}>\r\n            <>\r\n                سلام خوش آمدی {data?.decodedToken?.username} با نقش {data?.decodedToken?.roles[0]}\r\n            </>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default UserDashboard;\r\n","import React, { useEffect } from \"react\";\r\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\r\nimport AdminDashboard from \"../views/Dashboard/AdminDashboard\";\r\nimport UserDashboard from \"../views/Dashboard/UserDashboard\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { MainReducerInterface } from \"../provider/reducer/main.reducer\";\r\nimport { useJwt } from \"react-jwt\";\r\n\r\ninterface AuthRouteProps {\r\n    userRole: any;\r\n    route: { requiredPermissions: Array<string> };\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst AuthorizedRoute = ({ children, userRole, route, ...rest }: AuthRouteProps) => {\r\n    const requiredPermissions = route.requiredPermissions;\r\n    if (userRole) {\r\n        const userRoles = userRole?.roles;\r\n        if (!requiredPermissions.map((permission) => userRoles.includes(permission))) {\r\n            return <Navigate to={\"/\"} />;\r\n        }\r\n        return <>{children}</>;\r\n    } else {\r\n        return <>{children}</>;\r\n    }\r\n};\r\n\r\nconst PrivateRoutes = () => {\r\n    const auth = useSelector((state: MainReducerInterface) => state.auth);\r\n    const navigate = useNavigate();\r\n    const token = auth.token ?? localStorage.getItem(\"token\");\r\n    const data = useJwt(token ?? \"\");\r\n\r\n    useEffect(() => {\r\n        if (token == undefined) {\r\n            navigate(\"/\");\r\n        }\r\n    }, [navigate, token]);\r\n\r\n    return (\r\n        <Routes>\r\n            <Route\r\n                path=\"/karanbala/dashboard\"\r\n                element={\r\n                    <AuthorizedRoute\r\n                        userRole={data.decodedToken}\r\n                        route={{ requiredPermissions: [\"User\"] }}\r\n                    >\r\n                        <UserDashboard />\r\n                    </AuthorizedRoute>\r\n                }\r\n            />\r\n            <Route\r\n                path=\"/karanbala/admin\"\r\n                element={\r\n                    <AuthorizedRoute\r\n                        userRole={data.decodedToken}\r\n                        route={{ requiredPermissions: [\"SuperAdmin\"] }}\r\n                    >\r\n                        <AdminDashboard />\r\n                    </AuthorizedRoute>\r\n                }\r\n            />\r\n        </Routes>\r\n    );\r\n};\r\n\r\nexport default PrivateRoutes;\r\n"],"names":["useStyles","makeStyles","theme","container","margin","user","useSelector","state","console","log","useEffect","window","scrollTo","top","left","behavior","classes","_jsx","Box","className","children","map","reverseMap","Map","i","bits","toString","padding","length","repeat","set","charCodeAt","base64DecToArray","base64Str","charCodes","_i","get","slice","bytesArray","_i2","push","toByteArray","replaceAll","code","parseInt","decodeToken","token","split","base64Bytes","jsonPayload","decodeURIComponent","bytes","nPart","decoded","arrayLength","_i3","String","fromCodePoint","UTF8ArrToStr","JSON","parse","error","useJwt","userJwt","_useState","useState","isExpired","setIsExpired","_useState2","decodedToken","setDecodedToken","evaluateToken","result","exp","expirationDate","Date","setUTCSeconds","valueOf","isTokenExpired","reEvaluateToken","_auth$token","_data$decodedToken","_data$decodedToken2","auth","useNavigate","localStorage","getItem","data","_jsxs","_Fragment","username","roles","AuthorizedRoute","_ref","userRole","route","requiredPermissions","_objectWithoutProperties","_excluded","userRoles","permission","includes","Navigate","to","navigate","undefined","Routes","Route","path","element","UserDashboard","AdminDashboard"],"sourceRoot":""}